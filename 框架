1.1 AOP是一种面向切面的编程思想：将业务逻辑模块中，需要进行处理的供能点，从逻辑上的角度将其作为一个整体进行管理；
这个整体，就可以看做是有这些不同模块中的逻辑点构成的一个面；这个面就是切面；
1.2 AOP编程内容要求 
  连接点（JoinPoint）：进行切面业务处理时的时机点  例如方法执行前，方法执行后，抛出异常等时机点；
  
  增强（Advice）：添加特定程序上的一段业务逻辑处理代码；也就是在连接点上执行的业务处理过程；
  就是在特定连接点上触发的一组动作。
  
  切入点（pointcut）：被增强的连接点就是切入点；添加了增强功能的连接点；
  引入 （Introduction）：是一种特殊的增强；可以为目标对象添加一些属性和方法；一般用作动态的给目标对象附加一些行为；
  
  织入（Weaving）：将增强添加到目标对象的具体的连接点的过程。也就是将增强和连接点结合的过程就是织入；
  目标对象（Target）： 需要添加增强的目标类。（被代理的目标类）
  切面（Aspect）： 切面有切入点和增强构成。切面就是切入点的集合；AOP就是通过切面来管理连接点和增强的；
  代理（Proxy）： 目标对象通过AOP生成的代理对象；代理和目标对象之间是代理和被代理的关系。
  
